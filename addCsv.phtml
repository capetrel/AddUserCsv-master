<?php

// Début de l'upload du fichier, si le fichier dans le POST
if(isset($_FILES['upfile'])){

// constante magique __DIR__ -> dans le dossier du script, indique ou stocker le fichier
$target_dir = __DIR__.'/uploads/';

// On récupère le nom du fichier uploadé
$up_file = basename($_FILES['upfile']['name']);

// On récupère le nom temporaire donné par php
$file_size = filesize($_FILES['upfile']['tmp_name']);

// on récupère l'extension du fichier
$extension = strrchr($_FILES['upfile']['name'], '.');

// On prévoit une taille maximum pour le fichier
$max_weight = 1000000;

// On prévoit un tableau pour limiter les extentensions de fichier autorisé.
$extensions = array('.csv', '.xlsx', '.ods', '.xls');

	//Début des vérifications de sécurité...
	if(!in_array($extension, $extensions)){ //Si l'extension n'est pas dans le tableau
	 $error = 'Vous devez uploader un fichier avec l\'extentension ".csv", "xlsx.", ".xls", ".ods".';
	}

	// On vérifie la taille du fichier
	if($file_size>$max_weight){
     $error = 'Le fichier est trop gros...';
	}
	//S'il n'y a pas d'erreur et que fichier = .csv, on upload avec ce code
	if(!isset($error) && $extension === $extensions['0']){
		/*
		print_r($extension);
		echo " = ";
		print_r($extensions['0']);
		echo "Si cette s'affiche, le prg rentre dans la condition: : pas d'erreur et fichier = csv ";
		die();
		*/
     //On formate le nom du fichier ici au cas ou en utilisant une regex...
     $up_file = strtr($up_file,
          'ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÒÓÔÕÖÙÚÛÜÝàáâãäåçèéêëìíîïðòóôõöùúûüýÿ',
          'AAAAAACEEEEIIIIOOOOOUUUUYaaaaaaceeeeiiiioooooouuuuyy');
     $up_file = preg_replace('/([^.a-z0-9]+)/i', '-', $up_file);

		 // On enregistre le fichier sur le serveur et si la fonction move renvoie true on commence le traitement
     if(move_uploaded_file($_FILES['upfile']['tmp_name'], $target_dir . $up_file)){

          echo 'Upload effectué avec succès ! <br>';

					// On initialise un tableau vide
					$array = null;

					// On indique le chemin du fichier
					$file_path = $target_dir . $up_file;
					if (($handle = fopen($file_path, "r")) !== FALSE) { // fopen permet d'ouvrir le fichier
						fgetcsv($handle); // En Ajoutant cette ligne le programme lira la premiere ligne(qui n'est pas utilisé). Du coup le pointeur sera sur la deuxième ligne
						while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) { // la fonction fgetcsv va insérer chaque ligne de notre fichier dans un tableau avec un indice incrémenté pour chaque champ séparé par une virgule,(1000 représente le nombre de caractère maximum pour une ligne du fichier lu)
							$array[] = $data;
						}
						fclose($handle); // ferme le fichier
						unlink($file_path); // on le supprime
					}

					/*debug
					foreach($array as $ligne){
						foreach ($ligne as $value) {
							print_r($value);
							echo "<br />-------affiche value-------<br />";
						}

					}
					die();
					*/

					// Maintenant il faut insérer les données dans la BDD
					// par defaut le role sera 'user' pour tous, le status sera 'active', et released vaudra '1', date sera fonction mysql CURDATE()

					// pour chaque ligne une requête :
					foreach($array as $ligne){
							$db = new Database;

							// Il faut impérativement hasher le mot de passe avant de l'envoyer à la BDD
							// le CMS utilise une fonction javascript pour encoder les password avec l'algo MD5.
							// De plus la BDD est encodé en UTF-8 il faut le précisé ici pour la compatibilité.
							$mdp = md5( utf8_encode ($ligne['4']) );

							/* debug
							print_r($ligne['1']);
							echo "-------ligne 1 : nom------<br />";
							print_r($ligne['2']);
							echo "-------ligne 2 : prenom------<br />";
							print_r($ligne['3']);
							echo "-------ligne 3 : username------<br />";
							print_r($ligne['4']);
							echo "-------ligne 4 : mdp clair------<br />";
							print_r($mdp);
							echo "-------mdp crypté------<br />";
							print_r($ligne['5']);
							echo "-------ligne 5 : email------<br />";
							*/

							// protéger les champs, sécuriser la requête requête préparer
							$create_query = "INSERT INTO" . DB_PREFIX. " users (user_id, username, email, password, status, role, date_created, first_name, last_name, about_me, website, confirm_code, views, last_login, avatar, released)
															 VALUES (NULL, '" .$ligne['3']. "', '".$ligne['5']."', '".$mdp."', 'active', 'user', CURDATE(), '".$ligne['2']."', '".$ligne['1']."', NULL, NULL, NULL, '0', NULL, NULL, '1');" ;
							/*debug
							print_r($create_query);
							echo "-------requête sans nom et prénom------<br />";

							die();
							*/
							$db->query($create_query);

					}

     }else{ //Sinon la fonction move renvoie false il y une erreur le programme s'arrête.

          echo 'Echec de l\'upload !';
     }

	 // Sinon si pas d'erreur etl'extension n'est pas .csv
 }elseif(!isset($error) && $extension !== $extensions['0']){
	 //debug
	 print_r($extension);
	 echo " != ";
	 print_r($extensions['0']);
	 echo "Si cette s'affiche, le prg rentre dans la condition: : pas d'erreur et fichier n'est pas csv ";
	 die();


// Sinon il y une erreur dans les vérification du fichier (trop gros, etc...)
 }else{
     echo $error;
	 }
}

 ?>
 <!-- TODO :  gestion message d'erreur en css -->

<!-- formulaire html qui s'affiche dans le body des paramètre -->
<div class="block">
	<h1>Ajouter des utilisateurs avec un fichier CSV</h1>
	<p>
		Le fichier doit être au format .csv, la première ligne indique le nom des collonnes, <br>
		L'ordres des collones : vide, nom, prénom, identifiant, mot de passe, email.
	</p>
	<form method="post" enctype="multipart/form-data">
    <div class="form-group select-file <?=(isset ($error)) ? 'has-error' : ''?>">
        <label class="control-label">Fichier CSV :</label>
            <span>Parcourir</span>
						<!-- double vérification du poid du fichier ici et dans le code php -->
						<input type="hidden" name="MAX_FILE_SIZE" value="30000" />

						<!-- le type file inclus un texte qui s'affiche sur la droite -->
            <input id="upfile" type="file" name="upfile" />
         <br><br>
        <input type="submit" class="button button-upload" name="submit" value="Ajouter" />
    </div>
  </form>
</div>
